<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

	<!-- These types are from the span header. -->
	<!-- This is for dynamic_extent spans. -->

	<Type Name="gsl::span&lt;*, -1&gt;">
		<DisplayString>{storage_.data_,[storage_.size_ * sizeof($T1)]sb}</DisplayString>
		<Expand>
			<ArrayItems>
				<Size>storage_.size_</Size>
				<ValuePointer>storage_.data_</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>
	
	<!--<Type Name="gsl::span&lt;*, -1&gt;">
		<DisplayString>{{ extent = {storage_.size_} }}</DisplayString>
		<Expand>
			<ArrayItems>
				<Size>storage_.size_</Size>
				<ValuePointer>storage_.data_</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>-->

	<!-- This works for constexpr size spans. -->
	<!--<Type Name="gsl::span&lt;*, *&gt;">
		<DisplayString>{{ extent = {extent} }}</DisplayString>
		<Expand>
			<ArrayItems>
				<Size>extent</Size>
				<ValuePointer>storage_.data_</ValuePointer>
			</ArrayItems>
		</Expand>
	</Type>-->

	<!-- VC 2013 -->
	<Type Name="htd::deque&lt;*&gt;" Priority="MediumLow">
		<DisplayString>{{ size={_Mysize} }}</DisplayString>
		<Expand>
			<IndexListItems>
				<Size>_Mysize</Size>
				<ValueNode>_Map[(($i + _Myoff) / _EEN_DS) % _Mapsize][($i + _Myoff) % _EEN_DS]</ValueNode>
			</IndexListItems>
		</Expand>
	</Type>

	<!-- VC 2015 -->
	<Type Name="htd::deque&lt;*&gt;">
		<DisplayString>{{ size={_Mypair._Myval2._Mysize} }}</DisplayString>
		<Expand>
			<Item Name="[allocator]" ExcludeView="simple">_Mypair</Item>
			<IndexListItems>
				<Size>_Mypair._Myval2._Mysize</Size>
				<ValueNode>_Mypair._Myval2._Map[(($i + _Mypair._Myval2._Myoff) / _EEN_DS) % _Mypair._Myval2._Mapsize][($i + _Mypair._Myval2._Myoff) % _EEN_DS]</ValueNode>
			</IndexListItems>
		</Expand>
	</Type>

	<Type Name="htd::_Deque_iterator&lt;*&gt;">
		<AlternativeType Name="htd::_Deque_const_iterator&lt;*&gt;" />
		<DisplayString Condition="_Myoff &lt; ((_Mydeque_t *)_Myproxy-&gt;_Mycont)-&gt;_Myoff + ((_Mydeque_t *)_Myproxy-&gt;_Mycont)-&gt;_Mysize">{((_Mydeque_t *)_Myproxy-&gt;_Mycont)-&gt;_Map[(_Myoff / _EEN_DS) % ((_Mydeque_t *)_Myproxy-&gt;_Mycont)-&gt;_Mapsize][_Myoff % _EEN_DS]}</DisplayString>
		<DisplayString Condition="_Myoff &gt;= ((_Mydeque_t *)_Myproxy-&gt;_Mycont)-&gt;_Myoff + ((_Mydeque_t *)_Myproxy-&gt;_Mycont)-&gt;_Mysize">end</DisplayString>
		<Expand>
			<Item Condition="_Myoff &lt; ((_Mydeque_t *)_Myproxy-&gt;_Mycont)-&gt;_Myoff + ((_Mydeque_t *)_Myproxy-&gt;_Mycont)-&gt;_Mysize" Name="[index]">_Myoff - ((_Mydeque_t *)_Myproxy-&gt;_Mycont)-&gt;_Myoff</Item>
			<Item Condition="_Myoff &lt; ((_Mydeque_t *)_Myproxy-&gt;_Mycont)-&gt;_Myoff + ((_Mydeque_t *)_Myproxy-&gt;_Mycont)-&gt;_Mysize" Name="[ptr]">&amp;((_Mydeque_t *)_Myproxy-&gt;_Mycont)-&gt;_Map[(_Myoff / _EEN_DS) % ((_Mydeque_t *)_Myproxy-&gt;_Mycont)-&gt;_Mapsize][_Myoff % _EEN_DS]</Item>
		</Expand>
	</Type>


</AutoVisualizer>